===== Dialogs module Release Notes =====

This file contains a detailled summary of Dialogs module evolution.

For more details, please refer to the GIT log.

Dialogs 0.7 - 18/07/2012
========================

Selected new features:
----------------------

- when resolving a concept with an undefinite quantifier, first try to
  selected an object visible to the speaker
- to improve usability 'this' is resolved with 'pointsAt' instead 
  of 'focusesOn'
- Use of discrimination routines to generate relevant descriptions
  of objects when answering a question
- Verbalisation of agreements after recognition of desires
- Re-enable processing of statements like 'an apple is a fruit'
  (note that adjectives are discarded, like 'green' in 'a green 
  apple is a fruit')
- Improved discrimination output (no changes to the algorithm)
- Several improvements to what Dialogs says to the user (like 'I have 
  no answer' repalced by 'I don't know')
- better behaviour when Dialogs is run without a knowledge base
- Allow a list of 'standard' compound nouns in share/nouns that are
  identified as such at pre-processing stage.

Experimental features:
----------------------

- preliminary support for emotion expression: depending on the success of the 
  grounding, Dialogs assert some emotional state in the knowledge base.
  Note that this feature is disabled by commit ee3818ec because it causes some 
  (strange) issues to the Pellet reasoner.


Language features:
------------------

- Added support for the 'another' construct
- Added thematic roles for 'throw', 'bring'
- Added synonyms for 'go' and 'give'
- Minor other improvements (more adjectives are recognized, etc)

Other changes:
--------------

- Fixed a silly bug in pronoun reversal (you -> me)
- Labels are not created anymore when processing questions
- Many bugfixes
- Many refactoring, style & comment improvements. Much remain to be done :-)

Dialogs 0.6 - 19/10/2011
========================

Major new features:
-------------------

- concepts that are currently manipulated are marked as 'ActiveConcept' in
  the ontology. This allows for instance dynamic vizualisation of the
  grounding process.
- added infrastructure to assess the grammatical validity of a sentence
- added mechanism to render sentences with different formatter
  (included coloured tty + CSS ones)
- termination sentences (like 'goodbye') are recognized and Dialogs exits.
- added optional support of speech recognition via gSpeet (python bindings
  for the Google Speech recognition API)
- Dialogs now uses the new KB API of oro-server ('revise' action + policies)

Language features:
------------------

- Support for 'ALL' quantification
- Better support for 'SOME' quantification (when several candidates are
  available, a random one is picked)
- Fixed handling of "this" + category (the category was previously ignored)
- Added support for "in front of" construct
- Added support for "everything" ('everything' is currently equivalent to
  'all artifacts')/"anything"
- Some irregular nouns and adjectives have been added
- Some thematic roles have been added ('clean', 'look', 'uncover')

Grounding features:
-------------------

- Added a visibility check in the discrimination routine
- When an agent expresses a state, use an indirection with 'experience'.
  For instance: I'm cold -> [myself experience GD3s3, GD3s3 hasFeature cold]

Other new features:
-------------------

- host/port of the ontology server is not hardcoded anymore (!)
- fixed UTF8 issues
- continuous refactoring of the code
  - preprocessor and parser are now splitted
- fixed some logging issues
- added a failfast options for the unittests + a diff with expected results
- added a 'demo' generator that output parsing unittest to HTML
- lots of small bug fixes
- completed the documentation with more examples from the user-study and
  main algorithms
  
  
Dialogs 0.5 - 09/02/2011
========================
 
- Renaming from dialog to dialogs

Dialogs 0.4 - 25/01/2011
========================

- added special command 'forget it' to leave an interaction
- handle 'to know':
    - for instance, 'do you know the red bottle?'
	- 'what object do you know?'
	- 'i know the yellow banana'
- added a 'demo' mode that wait between each step (except it doesn't
because I couldn't find a way to actually wait for a keypress... cf commit
4cba0223)
- better processing of directions
- parsing support for more temporal preposistions (as soon as, until...)
- added 'X is Y' -> 'X sameAs Y'
- added the ability to 'teach' new concepts (commit f693602e):
  -> 'Learn that the bottle is on the table'
- more work on the merge function (when the human complete the informations)
- parsing (but no futher handling) of time data (months, days...)
- added an explicit 'SentenceFactory' to easily build common sentences like
questions
- added verb 'to think to' in the list of known verbs

and as usual, tenth of bug fixes :-)


Dialogs 0.3 - 08/09/2010
========================

The "Moving to London" scenario pass!

Dialogs 0.2 - 12/08/2010
========================

Main features:
--------------
    - input/output module to chat with the robot
    - grammar-free parsing module for English natural language (NL)
    - verbalizing module to reconstruct a NL sentence
    - glue-ing chat module with parser + verbalizer
    - resolution of personal references + anaphors
    - resolution noun phrases (= identification of concepts)
    - resolution action verbs based on thematic roles (dictionnary-based)
    - content analysis (done for imperative sentences, statements, questions)
    - statement builder (convert a parsed sentence into RDF statements)
    - question handler (for question, try to answer them with ORO)
    - glue-ing parsing + resolution + analysis + handling
    
Other features:
---------------
    - handling of groups with only an adjective
    - "this bottle is 'next to' the table" -> pre-processing to replace "next to" by "next+to"
    - Running dialog even if no ontology server.
    - Generate "subclassOf" statements:
        E.g: Apples are Fruits
            E.g: an Apple is a fruit
            - Manage Verb Tense in a naive way ("I went to Toulouse" -> [event1205 eventOccurs PAST]).
            - Process adverbs ("I go slowly to Toulouse" -> [event1205 actionSupervisionMode SLOW])
            - Process quantifiers: some, all, digits (1,2,3...), none
            - Handling of conjunctions (AND, OR)
            - pre content-analysis -> "what color is the tape?" -> don't use the color to discriminate
            - use 'safeAdd' method to detect the inconsistencies
            - Coloured output for easy explaination of the Dialog module behaviour

